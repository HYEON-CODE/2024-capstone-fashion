version: "3"

services:
  mysqldb:
    image: mysql:latest
    restart: always
    hostname: mysqldb
    environment:
      MYSQL_DATABASE: fashion
      MYSQL_ROOT_PASSWORD: 1224
    ports:
      - "3306:3306"
    volumes:
      - ./db/mysql/data:/var/lib/mysql
      - ./db/mysql/init:/docker-entrypoint-initdb.d

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094    # Kafka 브로커 리스너 설정 (Kafka 내부에서 접속할 정보)
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://34.47.98.129:9094    # 외부에서 접근 가능한 Kafka 브로커 주소
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1234

  backend:
    image: yuntaehyeon/capstone
    #build:
    #  context: .
    #  dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "8080:8080"
    volumes:
      - ./recommendation-system:/recommendation-system
      - ./temp:/temp
    depends_on:
      - mysqldb
      - redis
      - kafka
      - mongodb
    command:
      - bash
      - -c
      - |
        ./wait-for-it.sh mysqldb:3306 -s -t 100
        apt-get update
        apt install -y python3-pip
        pip3 install numpy sklearn joblib pandas
        java -jar /app.jar


